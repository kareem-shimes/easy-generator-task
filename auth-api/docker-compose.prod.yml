version: '3.8'

services:
  mongodb:
    image: mongo:6.0
    container_name: easygenerator-mongodb-prod
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-easygenerator-auth}
    volumes:
      - mongodb_data_prod:/data/db
      - ./backups:/backups
    networks:
      - easygenerator-network-prod
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: easygenerator-api-prod
    restart: always
    ports:
      - '3000:3000'
    environment:
      - MONGODB_URI=${MONGODB_URI:-mongodb://admin:password123@mongodb:27017/easygenerator-auth?authSource=admin}
      - JWT_SECRET=${JWT_SECRET:?JWT_SECRET is required}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET:?JWT_REFRESH_SECRET is required}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - PORT=3000
      - NODE_ENV=production
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CORS_ORIGIN=${CORS_ORIGIN:-*}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - easygenerator-network-prod
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy (optional, but recommended for production)
  # NOTE: This configuration uses HTTP only. For HTTPS, configure SSL in nginx.conf
  # or use an external reverse proxy (Cloudflare, AWS ALB, etc.)
  nginx:
    image: nginx:alpine
    container_name: easygenerator-nginx-prod
    restart: always
    ports:
      - '80:80'
      # - '443:443'  # Uncomment if you configure HTTPS in nginx.conf
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./nginx/ssl:/etc/nginx/ssl:ro  # Uncomment if you configure HTTPS
    depends_on:
      - api
    networks:
      - easygenerator-network-prod
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data_prod:
    driver: local

networks:
  easygenerator-network-prod:
    driver: bridge
